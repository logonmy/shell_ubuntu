##############################################    Linux如何开机自动运行自己的脚本         ##############################################

博客分类： LINUX
脚本LinuxCentOSWindowsBash 
    记录这个事情是上次完成之后，今天要新加一个文件夹，一时之间忘记以前怎么做了，因为有几种方法，起码我知道三种方法，这里记录一笔以前的做法，觉得最简单：

操作系统：CentOS-5.2
目      标：开机自动挂载局域网中windows的共享目录
 
一、root权限编辑/etc/rc.d/rc.local
 
Shell代码  收藏代码
su  
cd /etc/rc.d/  
vi rc.local  
 
二、在这个文件加上你要执行的脚本，全部内容如下：
 
Shell代码  收藏代码
#!/bin/sh  
#  
# This script will be executed *after* all the other init scripts.  
# You can put your own initialization stuff in here if you don't  
# want to do the full Sys V style init stuff.  
   
touch /var/lock/subsys/local  
mount //192.168.0.3/data2-1 /mnt/data2-1 -o username=un,password=123  
mount //192.168.0.3/data2-2 /mnt/data2-2 -o username=un,password=123  
mount //192.168.0.3/data2-3 /mnt/data2-3 -o username=un,password=123  
mount //192.168.0.3/data2-4 /mnt/data2-4 -o username=un,password=123  
mount //192.168.0.3/data2-5 /mnt/data2-4 -o username=un,password=123  
 提示：这里的做法很不成熟，希望不要这样，最好自己写个脚本文件在这里来调用，结构更清晰，但是要注意到是把要执行的命令作为一个参数传递给su。
 
另外复习一个VI编辑命令-拷贝
yy
p
 
三、虽然搞定，还是补充一下
 
    Linux在启动时，会自动执行/etc/rc.d目录下的初始化程序，因此我们可以把启动任务放到该目录下，有下列办法：
 
    方案一：
    比较简单，就是上面的做法，/etc/rc.d/目录下的初始化程序很多，rc.local是在完成所有初始化之后执行的，所以在这里做手脚很合适。
 
    方案二：
    init.d目录下都为可执行程序，他们其实是服务脚本，按照一定格式编写，Linux 在启动时会自动执行，类似Windows下的服务。
  1、编写如下面的脚本simpleTest：
Shell代码  收藏代码
#!/bin/bash  
#chkconfig:2345 80 05 --指定在哪几个级别执行，0一般指关机，6指的是重启，其他为正常启动。80为启动的优先级，05为关闭的优先级别  
#description:simple example service  
RETVAL=0  
start(){ #启动服务的入口函数  
echo  "simple example service is started..."  
}  
  
stop(){ #关闭服务的入口函数  
echo  "simple example service is stoped..."  
}  
  
#使用case选择  
case $1 in  
start)  
start  
;;  
stop)  
stop  
;;  
*)  
echo "error choice ! please input start or stop";;  
esac  
exit $RETVA  
3、运行chmod +x /etc/rc.d/init.d/simpleTest,使之可直接执行
4、运行chkconfig --add simpleTest,把该服务添加到配置当中
5、运行chkconfig --list simpleTest,可以查看该服务进程的状态
 
 
方案三、目的是挂载共享目录，所以可以在/etc/fstab中加上
//192.168.0.3/data2-1   /mnt/data2-1            nfs     username=un,password=123     0 0
 
 
 
非常不好意思，方案二中虽然脚本可以运行
# ./simpleTest start
simple example service is started...
但是我在第4步出现
# chkconfig --add simpleTest
在 simpleTest 服务中读取信息时出错：没有那个文件或目录
没有进一步解决抱歉。


###############################################  Linux启动过程详解-《别怕Linux编程》之八   ############################################### 

===

[正文开始]

启动第一步－－加载BIOS

当你打开计算机电源，计算机会首先加载BIOS信息，BIOS信息是如此的重要，以至于计算机必须在最开始就找到它。这是因为BIOS中包含了CPU的相关信息、设备启动顺序信息、硬盘信息、内存信息、时钟信息、PnP特性等等。在此之后，计算机心里就有谱了，知道应该去读取哪个硬件设备了。

启动第二步－－读取MBR

众所周知，硬盘上第0磁道第一个扇区被称为MBR，也就是Master Boot Record，即主引导记录，它的大小是512字节，别看地方不大，可里面却存放了预启动信息、分区表信息。

系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0x7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader，而具体到你的电脑，那就是lilo或者grub了。

启动第三步－－Boot Loader

Boot Loader 就是在操作系统内核运行之前运行的一段小程序。通过这段小程序，我们可以初始化硬件设备、建立内存空间的映射图，从而将系统的软硬件环境带到一个合适的状态，以便为最终调用操作系统内核做好一切准备。

Boot Loader有若干种，其中Grub、Lilo和spfdisk是常见的Loader。

我们以Grub为例来讲解吧，毕竟用lilo和spfdisk的人并不多。

系统读取内存中的grub配置信息（一般为menu.lst或grub.lst），并依照此配置信息来启动不同的操作系统。

启动第四步－－加载内核

根据grub设定的内核映像所在路径，系统读取内存映像，并进行解压缩操作。此时，屏幕一般会输出“Uncompressing Linux”的提示。当解压缩内核完成后，屏幕输出“OK, booting the kernel”。

系统将解压后的内核放置在内存之中，并调用start_kernel()函数来启动一系列的初始化函数并初始化各种设备，完成Linux核心环境的建立。至此，Linux内核已经建立起来了，基于Linux的程序应该可以正常运行了。

启动第五步－－用户层init依据inittab文件来设定运行等级

内核被加载后，第一个运行的程序便是/sbin/init，该文件会读取/etc/inittab文件，并依据此文件来进行初始化工作。

其实/etc/inittab文件最主要的作用就是设定Linux的运行等级，其设定形式是“：id:5:initdefault:”，这就表明Linux需要运行在等级5上。Linux的运行等级设定如下：

0：关机

1：单用户模式

2：无网络支持的多用户模式

3：有网络支持的多用户模式

4：保留，未使用

5：有网络支持有X-Window支持的多用户模式

6：重新引导系统，即重启

关于/etc/inittab文件的学问，其实还有很多，在后序文章中设计到的，卖个关子，敬请期待，呵呵

启动第六步－－init进程执行rc.sysinit

在设定了运行等级后，Linux系统执行的第一个用户层文件就是/etc/rc.d/rc.sysinit脚本程序，它做的工作非常多，包括设定PATH、设定网络配置（/etc/sysconfig/network）、启动swap分区、设定/proc等等。如果你有兴趣，可以到/etc/rc.d中查看一下rc.sysinit文件，里面的脚本够你看几天的:P

启动第七步－－启动内核模块

具体是依据/etc/modules.conf文件或/etc/modules.d目录下的文件来装载内核模块。

启动第八步－－执行不同运行级别的脚本程序

根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，来完成相应的初始化工作和启动相应的服务。

启动第九步－－执行/etc/rc.d/rc.local

你如果打开了此文件，里面有一句话，读过之后，你就会对此命令的作用一目了然：

# This script will be executed *after* all the other init scripts.
# You can put your own initialization stuff in here if you don’t
# want to do the full Sys V style init stuff.

rc.local就是在一切初始化工作后，Linux留给用户进行个性化的地方。你可以把你想设置和启动的东西放到这里。

启动第十步－－执行/bin/login程序，进入登录状态

此时，系统已经进入到了等待用户输入username和password的时候了，你已经可以用自己的帐号登入系统了。:)

===

漫长的启动过程结束了，一切都清静了…

其实在这背后，还有着更加复杂的底层函数调用，等待着你去研究…本文就算抛砖引玉了:)

本文参考了如下文章，精炼荟萃而成：

http://bbs.chinaunix.net/thread-835918-1-1.html

http://hi.baidu.com/fembed/blog/item/b9f0881f51145866f624e4be.html

http://baike.baidu.com/view/9485.htm

Linux启动过程分析－霍丙全－山东滨州职业学院计算机工程系

Linux启动过程分析与优化－浙江大学硕士学位论文

感谢上述文章作者:)

ps:第一次用wordpress2.7发文章，纪念一下。

ps:朋友说，为啥把这部分内容放到这里? 因为我觉得深入了解启动过程对于编写优秀的程序其实也是很重要的。

over~

作者 rocrocket 于 7:44 下午

文章标签: grub, inittab, lilo, linux, 启动, 流程, 详解

16 Comments to Linux启动过程详解-《别怕Linux编程》之八
颜小诗说道：
一月 6, 2009 9:24 下午
推荐一本书可以看看 确实挺不错的 也是别人推荐给我的 嗯

《Linux操作系统之奥秘》 国产的 难得写得那么细节哦

简介详见豆瓣：http://www.douban.com/subject/3078298/








